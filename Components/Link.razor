@namespace Toolbelt.Blazor.HeadElement
@inject Toolbelt.Blazor.HeadElement.IHeadElementHelper HeadElementHelper

@code {
    [Parameter]
    public string? Rel { get; set; } = "";

    [Parameter]
    public string? Href { get; set; } = "";

    [Parameter]
    public string? Sizez { get; set; } = "";

    [Parameter]
    public string? Type { get; set; } = "";

    [Parameter]
    public string? Title { get; set; } = "";

    [Parameter]
    public string? Media { get; set; } = "";

    [Parameter]
    public string? As { get; set; } = "";

    [Parameter]
    public string? CrossOrigin { get; set; } = "";

    [Parameter]
    public string? Hreflang { get; set; } = "";

    [Parameter]
    public string? ImageSizes { get; set; } = "";

    [Parameter]
    public string? ImageSrcset { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await HeadElementHelper.SetLinkElementsAsync(new LinkElement
        {
            Rel = Rel ?? "",
            Href = Href ?? "",
            Sizes = Sizez ?? "",
            Type = Type ?? "",
            Title = Title ?? "",
            Media = Media ?? "",
            As = As ?? "",
            CrossOrigin = CrossOrigin ?? "",
            Hreflang = Hreflang ?? "",
            ImageSizes = ImageSizes ?? "",
            ImageSrcset = ImageSrcset ?? "",
            Disabled = Disabled
        });
    }
}